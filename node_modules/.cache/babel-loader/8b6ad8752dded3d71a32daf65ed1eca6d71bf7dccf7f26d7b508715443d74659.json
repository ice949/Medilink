{"ast":null,"code":"export const provider = (state = {}, action) => {\n  switch (action.type) {\n    case \"PROVIDER_LOADED\":\n      return {\n        ...state,\n        connection: action.connection\n      };\n    case \"NETWORK_LOADED\":\n      return {\n        ...state,\n        chainId: action.chainId\n      };\n    case \"ACCOUNT_LOADED\":\n      return {\n        ...state,\n        account: action.account\n      };\n    case \"ETHER_BALANCE_LOADED\":\n      return {\n        ...state,\n        balance: action.balance\n      };\n    default:\n      return state;\n  }\n};\nconst DEFAULT_MEDICAL_STATE = {\n  loaded: false,\n  contract: {},\n  transaction: {\n    isSuccessful: false\n  },\n  allMedical: {\n    loaded: false,\n    data: []\n  },\n  deleteMedical: {\n    loaded: false,\n    data: []\n  },\n  events: []\n};\nexport const medical = (state = DEFAULT_MEDICAL_STATE, action) => {\n  let index, data;\n  switch (action.type) {\n    case \"MEDICAL_LOADED\":\n      return {\n        ...state,\n        loaded: true,\n        contract: action.medical\n      };\n    case \"ALL_MEDICAL_RECORDS\":\n      return {\n        ...state,\n        allMedical: {\n          loaded: true,\n          data: action.medicalRecords\n        }\n      };\n    case \"ALL_DELETED_RECORDS\":\n      return {\n        ...state,\n        deleteMedical: {\n          loaded: true,\n          data: action.deleteRecords\n        }\n      };\n    case \"NEW_RECORD_LOADED\":\n      return {\n        ...state,\n        transaction: {\n          isPending: true,\n          isSuccessful: false\n        }\n      };\n    case \"NEW_RECORD_SUCCESS\":\n      index = state.allMedical.data.findIndex(order => order.recordId.toString() === action.medicalOrder.recordId.toString());\n      if (index === -1) {\n        data = [...state.allMedical.data, action.medicalOrder];\n      } else {\n        data = state.allMedical.data;\n      }\n      return {\n        ...state,\n        allMedical: {\n          ...state.allMedical,\n          data\n        },\n        transaction: {\n          isPending: false,\n          isSuccessful: true\n        },\n        events: [action.event, ...state.events]\n      };\n    case \"NEW_RECORD_FAIL\":\n      return {\n        ...state,\n        transaction: {\n          isPending: false,\n          isError: true,\n          isSuccessful: false\n        }\n      };\n    case \"DELETE_REQUEST_INNITIALIZED\":\n      return {\n        ...state,\n        transaction: {\n          isPending: true,\n          isSuccessful: false\n        }\n      };\n    case \"DELETE_REQUEST_SUCCESS\":\n      index = state.deleteMedical.data.findIndex(order => order.recordId.toString() === action.deleteOrder.recordId.toString());\n      if (index === -1) {\n        data = [...state.deleteMedical.data, action.deleteOrder];\n      } else {\n        data = state.deleteMedical.data;\n      }\n      return {\n        ...state,\n        deleteMedical: {\n          ...state.deleteMedical,\n          data\n        },\n        transaction: {\n          isPending: false,\n          isSuccessful: true\n        },\n        events: [action.event, ...state.events]\n      };\n    case \"DELETE_REQUEST_FAILED\":\n      return {\n        ...state,\n        transaction: {\n          isPending: false,\n          isError: true,\n          isSuccessful: false\n        }\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["provider","state","action","type","connection","chainId","account","balance","DEFAULT_MEDICAL_STATE","loaded","contract","transaction","isSuccessful","allMedical","data","deleteMedical","events","medical","index","medicalRecords","deleteRecords","isPending","findIndex","order","recordId","toString","medicalOrder","event","isError","deleteOrder"],"sources":["C:/Users/Madalitso/Documents/GitHub/Blockchain/Medilink/src/store/reducer.js"],"sourcesContent":["export const provider = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"PROVIDER_LOADED\":\r\n      return { ...state, connection: action.connection };\r\n    case \"NETWORK_LOADED\":\r\n      return { ...state, chainId: action.chainId };\r\n    case \"ACCOUNT_LOADED\":\r\n      return {\r\n        ...state,\r\n        account: action.account,\r\n      };\r\n    case \"ETHER_BALANCE_LOADED\":\r\n      return {\r\n        ...state,\r\n        balance: action.balance,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst DEFAULT_MEDICAL_STATE = {\r\n  loaded: false,\r\n  contract: {},\r\n  transaction: {\r\n    isSuccessful: false,\r\n  },\r\n  allMedical: {\r\n    loaded: false,\r\n    data: [],\r\n  },\r\n  deleteMedical: {\r\n    loaded: false,\r\n    data: [],\r\n  },\r\n  events: [],\r\n};\r\nexport const medical = (state = DEFAULT_MEDICAL_STATE, action) => {\r\n  let index, data;\r\n  switch (action.type) {\r\n    case \"MEDICAL_LOADED\":\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        contract: action.medical,\r\n      };\r\n    case \"ALL_MEDICAL_RECORDS\":\r\n      return {\r\n        ...state,\r\n        allMedical: {\r\n          loaded: true,\r\n          data: action.medicalRecords,\r\n        },\r\n      };\r\n    case \"ALL_DELETED_RECORDS\":\r\n      return {\r\n        ...state,\r\n        deleteMedical: {\r\n          loaded: true,\r\n          data: action.deleteRecords,\r\n        },\r\n      };\r\n    case \"NEW_RECORD_LOADED\":\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          isPending: true,\r\n          isSuccessful: false,\r\n        },\r\n      };\r\n    case \"NEW_RECORD_SUCCESS\":\r\n      index = state.allMedical.data.findIndex(\r\n        (order) =>\r\n          order.recordId.toString() === action.medicalOrder.recordId.toString()\r\n      );\r\n      if (index === -1) {\r\n        data = [...state.allMedical.data, action.medicalOrder];\r\n      } else {\r\n        data = state.allMedical.data;\r\n      }\r\n      return {\r\n        ...state,\r\n        allMedical: {\r\n          ...state.allMedical,\r\n          data,\r\n        },\r\n        transaction: {\r\n          isPending: false,\r\n          isSuccessful: true,\r\n        },\r\n        events: [action.event, ...state.events],\r\n      };\r\n    case \"NEW_RECORD_FAIL\":\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          isPending: false,\r\n          isError: true,\r\n          isSuccessful: false,\r\n        },\r\n      };\r\n    case \"DELETE_REQUEST_INNITIALIZED\":\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          isPending: true,\r\n          isSuccessful: false,\r\n        },\r\n      };\r\n    case \"DELETE_REQUEST_SUCCESS\":\r\n      index = state.deleteMedical.data.findIndex(\r\n        (order) =>\r\n          order.recordId.toString() === action.deleteOrder.recordId.toString()\r\n      );\r\n      if (index === -1) {\r\n        data = [...state.deleteMedical.data, action.deleteOrder];\r\n      } else {\r\n        data = state.deleteMedical.data;\r\n      }\r\n      return {\r\n        ...state,\r\n        deleteMedical: {\r\n          ...state.deleteMedical,\r\n          data,\r\n        },\r\n        transaction: {\r\n          isPending: false,\r\n          isSuccessful: true,\r\n        },\r\n        events: [action.event, ...state.events],\r\n      };\r\n    case \"DELETE_REQUEST_FAILED\":\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          isPending: false,\r\n          isError: true,\r\n          isSuccessful: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}